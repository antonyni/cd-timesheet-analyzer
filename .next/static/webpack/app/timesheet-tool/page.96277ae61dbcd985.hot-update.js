"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/timesheet-tool/page",{

/***/ "(app-pages-browser)/./src/helpers/makeTimeSheetAnalysis.jsx":
/*!***********************************************!*\
  !*** ./src/helpers/makeTimeSheetAnalysis.jsx ***!
  \***********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var exceljs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! exceljs */ \"(app-pages-browser)/./node_modules/exceljs/dist/exceljs.min.js\");\n/* harmony import */ var exceljs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(exceljs__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! file-saver */ \"(app-pages-browser)/./node_modules/file-saver/dist/FileSaver.min.js\");\n/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(file_saver__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _hoursToDecimal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./hoursToDecimal */ \"(app-pages-browser)/./src/helpers/hoursToDecimal.jsx\");\n/* harmony import */ var _getDateFromString__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getDateFromString */ \"(app-pages-browser)/./src/helpers/getDateFromString.jsx\");\n/* harmony import */ var _decimalToHours__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./decimalToHours */ \"(app-pages-browser)/./src/helpers/decimalToHours.jsx\");\n/* harmony import */ var _getWeekBefore__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./getWeekBefore */ \"(app-pages-browser)/./src/helpers/getWeekBefore.jsx\");\n\n\n\n\n\n\nconst makeTimesheetAnalysis = (timesheetExcel, simplifiedSchedule, percentageAccepted)=>{\n    const workbook = new exceljs__WEBPACK_IMPORTED_MODULE_0__.Workbook();\n    let hoursWorkedMap = {};\n    initializeHoursWorkedMap(hoursWorkedMap, simplifiedSchedule);\n    console.log(simplifiedSchedule);\n    populateHoursWorkedMap(timesheetExcel, hoursWorkedMap, simplifiedSchedule, percentageAccepted);\n    processChangeFromPreviousWeek(workbook, hoursWorkedMap);\n// workbook.xlsx.writeBuffer().then(data => {\n//     const blob = new Blob([data]);\n//     FileSaver.saveAs(blob, \"Timesheet Analysis.xlsx\");\n// });\n};\nconst initializeHoursWorkedMap = (hoursWorkedMap, simplifiedSchedule)=>{\n    Object.keys(simplifiedSchedule).forEach((weekName)=>{\n        if (!hoursWorkedMap[weekName]) {\n            hoursWorkedMap[weekName] = {\n                total: {\n                    totalHoursWorked: 0,\n                    totalHoursScheduled: 0\n                },\n                interns: {}\n            };\n        }\n        Object.keys(simplifiedSchedule[weekName].interns).forEach((intern)=>{\n            const decimalHoursScheduled = simplifiedSchedule[weekName].interns[intern];\n            const normalHoursScheduled1 = (0,_decimalToHours__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(decimalHoursScheduled);\n            if (!hoursWorkedMap[weekName].interns[intern]) {\n                hoursWorkedMap[weekName].interns[intern] = {};\n            }\n            const currIntern = hoursWorkedMap[weekName].interns[intern];\n            currIntern.normalHoursWorked = \"00:00\";\n            currIntern.normalHoursScheduled = normalHoursScheduled1;\n            currIntern.percentageDifference = 0;\n            console.log(hoursWorkedMap[weekName].interns[intern]);\n            console.log(hoursWorkedMap[weekName].interns);\n        });\n        console.log(hoursWorkedMap[weekName].interns);\n        hoursWorkedMap[weekName].total.totalHoursScheduled = simplifiedSchedule[weekName].totalHoursScheduled;\n    });\n    console.log(hoursWorkedMap);\n};\nconst populateHoursWorkedMap = (timesheetExcel, hoursWorkedMap, simplifiedSchedule, percentageAccepted)=>{\n    const timeSheet = timesheetExcel.getWorksheet(\"All Employees\");\n    const tempFirstName = timeSheet.getCell(2, 1).value;\n    const tempLastName = timeSheet.getCell(2, 2).value;\n    let currentIntern = tempFirstName + \" \" + tempLastName;\n    for(let row = 2; row <= timeSheet.rowCount; row++){\n        const firstName = timeSheet.getCell(row, 1).value;\n        const lastName = timeSheet.getCell(row, 2).value;\n        if (firstName && firstName + \" \" + lastName != currentIntern) {\n            currentIntern = firstName + \" \" + lastName;\n        }\n        const date = timeSheet.getCell(row, 5).value;\n        if (date) {\n            const weekName = (0,_getDateFromString__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(timeSheet.getCell(row, 5).value);\n            if (hoursWorkedMap[weekName]) {\n                const currentWeek = hoursWorkedMap[weekName].interns;\n                if (currentWeek[currentIntern]) {\n                    processHoursData(row, timeSheet, hoursWorkedMap, currentIntern, weekName, simplifiedSchedule);\n                }\n            }\n        }\n    // populateRow(workBookData, currentInternData, percentageAccepted, row);\n    // currSheet.getCell(2, 9).value = hoursWorkedMap[weekName].total;\n    // currSheet.getCell(2, 10).value = simplifiedSchedule[weekName].totalScheduledHours;\n    // currSheet.getCell(2, 11).value = (hoursWorkedMap[weekName].total / simplifiedSchedule[weekName].totalScheduledHours * 100).toFixed(2);\n    }\n    console.log(hoursWorkedMap);\n    console.log(simplifiedSchedule);\n};\nconst setUpNewSheet = (hoursWorkedMap, weekName, workbook)=>{\n    hoursWorkedMap[weekName] = {};\n    hoursWorkedMap[weekName].total = 0;\n    const sheet = workbook.addWorksheet(weekName);\n    sheet.views = [\n        {}\n    ];\n    sheet.properties.defaultColWidth = 15;\n    sheet.properties.defaultRowHeight = 20;\n    setUpColumns(sheet);\n};\nconst setUpColumns = (worksheet)=>{\n    const firstName = worksheet.getColumn(1);\n    firstName.header = \"First Name\";\n    firstName.key = \"firstName\";\n    const lastName = worksheet.getColumn(2);\n    lastName.header = \"Last Name\";\n    lastName.key = \"lastName\";\n    const hoursWorked = worksheet.getColumn(3);\n    hoursWorked.header = \"Hours Worked\";\n    hoursWorked.key = \"hoursWorked\";\n    const hoursScheduled = worksheet.getColumn(4);\n    hoursScheduled.header = \"Hours Scheduled\";\n    hoursScheduled.key = \"hoursScheduled\";\n    const percentWorked = worksheet.getColumn(5);\n    percentWorked.header = \"Percent Worked\";\n    percentWorked.key = \"percentWorked\";\n    const changeFromPreviousWeek = worksheet.getColumn(6);\n    changeFromPreviousWeek.header = \"Percent Change from Last Week\";\n    changeFromPreviousWeek.key = \"changeFromPreviousWeek\";\n    changeFromPreviousWeek.width = 25;\n    const taAssigned = worksheet.getColumn(7);\n    taAssigned.header = \"TA\";\n    taAssigned.key = \"ta\";\n    const totalWorked = worksheet.getColumn(9);\n    totalWorked.header = \"Total Worked\";\n    totalWorked.key = \"totalWorked\";\n    const totalScheduled = worksheet.getColumn(10);\n    totalScheduled.header = \"Total Scheduled\";\n    totalScheduled.key = \"totalScheduled\";\n    const totalPercentWorked = worksheet.getColumn(11);\n    totalPercentWorked.header = \"Percent Worked\";\n    totalPercentWorked.key = \"totalPercentWorked\";\n    const totalPercentChange = worksheet.getColumn(12);\n    totalPercentChange.header = \"Total Percent Change from Last Week\";\n    totalPercentChange.key = \"totalPercentChange\";\n    totalPercentChange.width = 30;\n};\nconst populateRow = (workBookData, currentInternData, percentageAccepted, row)=>{\n    const currSheet = workBookData.workbook.getWorksheet(workBookData.weekName);\n    currSheet.addRow({\n        firstName: currentInternData.firstName,\n        lastName: currentInternData.lastName,\n        hoursWorked: normalHoursWorked,\n        hoursScheduled: normalHoursScheduled,\n        percentWorked: percentageDifference\n    });\n    colorPercentageCell(currSheet, percentageAccepted);\n};\nconst processHoursData = (row, timeSheet, hoursWorkedMap, currentIntern, weekName, simplifiedSchedule)=>{\n    const normalHoursWorked1 = timeSheet.getCell(row, 15).value;\n    hoursWorkedMap[weekName].interns[currentIntern].normalHoursWorked = normalHoursWorked1;\n    const decimalHoursScheduled = simplifiedSchedule[weekName][currentIntern];\n    const decimalHoursWorked = (0,_hoursToDecimal__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(normalHoursWorked1);\n    hoursWorkedMap[weekName].total.totalHoursWorked += decimalHoursWorked;\n    hoursWorkedMap.total.totalHoursWorked += decimalHoursWorked;\n    const percentageDifference1 = (decimalHoursWorked / decimalHoursScheduled * 100).toFixed(2);\n    hoursWorkedMap[weekName].interns[currentIntern].percentageDifference = percentageDifference1;\n};\nconst processChangeFromPreviousWeek = (workbook, hoursWorkedMap)=>{\n    workbook.eachSheet((worksheet)=>{\n        const currWeek = worksheet.name;\n        const prevWeek = (0,_getWeekBefore__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(currWeek);\n        for(let row = 2; row <= worksheet.rowCount; row++){\n            const firstName = worksheet.getCell(row, 1).value;\n            const lastName = worksheet.getCell(row, 2).value;\n            const fullName = firstName + \" \" + lastName;\n            let percentageDifferenceOfPreviousWeek;\n            if (hoursWorkedMap[prevWeek] && hoursWorkedMap[prevWeek][fullName]) {\n                percentageDifferenceOfPreviousWeek = hoursWorkedMap[prevWeek][fullName].percentageDifference;\n            }\n            const percentageDifferenceOfCurrentWeek = hoursWorkedMap[currWeek][fullName].percentageDifference;\n            let differenceFromWeeks = percentageDifferenceOfPreviousWeek ? (percentageDifferenceOfCurrentWeek - percentageDifferenceOfPreviousWeek).toFixed(2) : \"\";\n            const currCell = worksheet.getCell(row, 6);\n            currCell.value = differenceFromWeeks;\n            if (currCell <= -15) {\n                currCell.fill = {\n                    type: \"pattern\",\n                    pattern: \"solid\",\n                    fgColor: {\n                        argb: \"80e76060\"\n                    }\n                };\n            }\n            if (currCell > 15) {\n                currCell.fill = {\n                    type: \"pattern\",\n                    pattern: \"solid\",\n                    fgColor: {\n                        argb: \"8042f58d\"\n                    }\n                };\n            }\n        }\n    });\n};\nconst colorPercentageCell = (currSheet, percentageAccepted)=>{\n    const currCell = currSheet.getCell(currSheet.rowCount, 5);\n    if (parseFloat(currCell) < percentageAccepted) {\n        currCell.fill = {\n            type: \"pattern\",\n            pattern: \"solid\",\n            fgColor: {\n                argb: \"80e76060\"\n            }\n        };\n    }\n    if (parseFloat(currCell) > 100) {\n        currCell.fill = {\n            type: \"pattern\",\n            pattern: \"solid\",\n            fgColor: {\n                argb: \"8042f58d\"\n            }\n        };\n    }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (makeTimesheetAnalysis);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9oZWxwZXJzL21ha2VUaW1lU2hlZXRBbmFseXNpcy5qc3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQWtDO0FBQ0s7QUFDTztBQUNNO0FBQ047QUFDRjtBQUU1QyxNQUFNTSx3QkFBd0IsQ0FBQ0MsZ0JBQWdCQyxvQkFBb0JDO0lBQy9ELE1BQU1DLFdBQVcsSUFBSVYsNkNBQWdCO0lBQ3JDLElBQUlZLGlCQUFpQixDQUNyQjtJQUVBQyx5QkFBeUJELGdCQUFnQko7SUFDekNNLFFBQVFDLEdBQUcsQ0FBQ1A7SUFDWlEsdUJBQXVCVCxnQkFBZ0JLLGdCQUFnQkosb0JBQW9CQztJQUUzRVEsOEJBQThCUCxVQUFVRTtBQUl4Qyw2Q0FBNkM7QUFDN0MscUNBQXFDO0FBQ3JDLHlEQUF5RDtBQUN6RCxNQUFNO0FBRVY7QUFFQSxNQUFNQywyQkFBMkIsQ0FBQ0QsZ0JBQWdCSjtJQUM5Q1UsT0FBT0MsSUFBSSxDQUFDWCxvQkFBb0JZLE9BQU8sQ0FBQyxDQUFDQztRQUNyQyxJQUFJLENBQUNULGNBQWMsQ0FBQ1MsU0FBUyxFQUFFO1lBQzNCVCxjQUFjLENBQUNTLFNBQVMsR0FBRztnQkFDdkJDLE9BQU87b0JBQ0hDLGtCQUFrQjtvQkFDbEJDLHFCQUFxQjtnQkFDekI7Z0JBQ0FDLFNBQVMsQ0FFVDtZQUNKO1FBQ0o7UUFHQVAsT0FBT0MsSUFBSSxDQUFDWCxrQkFBa0IsQ0FBQ2EsU0FBUyxDQUFDSSxPQUFPLEVBQUVMLE9BQU8sQ0FBQyxDQUFDTTtZQUN2RCxNQUFNQyx3QkFBd0JuQixrQkFBa0IsQ0FBQ2EsU0FBUyxDQUFDSSxPQUFPLENBQUNDLE9BQU87WUFDMUUsTUFBTUUsd0JBQXVCeEIsMkRBQWNBLENBQUN1QjtZQUM1QyxJQUFHLENBQUNmLGNBQWMsQ0FBQ1MsU0FBUyxDQUFDSSxPQUFPLENBQUNDLE9BQU8sRUFBQztnQkFDekNkLGNBQWMsQ0FBQ1MsU0FBUyxDQUFDSSxPQUFPLENBQUNDLE9BQU8sR0FBRyxDQUFDO1lB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TUFBTTtZQUNOQyxTQUFTO1lBQ1RDLFNBQVM7Z0JBQUVDLE1BQU07WUFBVztRQUNoQztJQUNKO0FBQ0o7QUFHQSwrREFBZW5GLHFCQUFxQkEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvaGVscGVycy9tYWtlVGltZVNoZWV0QW5hbHlzaXMuanN4Pzk1YWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgRXhjZWxKUyBmcm9tICdleGNlbGpzJ1xuaW1wb3J0ICogYXMgRmlsZVNhdmVyIGZyb20gJ2ZpbGUtc2F2ZXInXG5pbXBvcnQgaG91cnNUb0RlY2ltYWwgZnJvbSAnLi9ob3Vyc1RvRGVjaW1hbCc7XG5pbXBvcnQgZ2V0RGF0ZUZyb21TdHJpbmcgZnJvbSAnLi9nZXREYXRlRnJvbVN0cmluZyc7XG5pbXBvcnQgZGVjaW1hbFRvSG91cnMgZnJvbSAnLi9kZWNpbWFsVG9Ib3Vycyc7XG5pbXBvcnQgZ2V0V2Vla0JlZm9yZSBmcm9tICcuL2dldFdlZWtCZWZvcmUnO1xuXG5jb25zdCBtYWtlVGltZXNoZWV0QW5hbHlzaXMgPSAodGltZXNoZWV0RXhjZWwsIHNpbXBsaWZpZWRTY2hlZHVsZSwgcGVyY2VudGFnZUFjY2VwdGVkKSA9PiB7XG4gICAgY29uc3Qgd29ya2Jvb2sgPSBuZXcgRXhjZWxKUy5Xb3JrYm9vaygpO1xuICAgIGxldCBob3Vyc1dvcmtlZE1hcCA9IHtcbiAgICB9O1xuXG4gICAgaW5pdGlhbGl6ZUhvdXJzV29ya2VkTWFwKGhvdXJzV29ya2VkTWFwLCBzaW1wbGlmaWVkU2NoZWR1bGUpO1xuICAgIGNvbnNvbGUubG9nKHNpbXBsaWZpZWRTY2hlZHVsZSk7XG4gICAgcG9wdWxhdGVIb3Vyc1dvcmtlZE1hcCh0aW1lc2hlZXRFeGNlbCwgaG91cnNXb3JrZWRNYXAsIHNpbXBsaWZpZWRTY2hlZHVsZSwgcGVyY2VudGFnZUFjY2VwdGVkKTtcblxuICAgIHByb2Nlc3NDaGFuZ2VGcm9tUHJldmlvdXNXZWVrKHdvcmtib29rLCBob3Vyc1dvcmtlZE1hcCk7XG5cblxuXG4gICAgLy8gd29ya2Jvb2sueGxzeC53cml0ZUJ1ZmZlcigpLnRoZW4oZGF0YSA9PiB7XG4gICAgLy8gICAgIGNvbnN0IGJsb2IgPSBuZXcgQmxvYihbZGF0YV0pO1xuICAgIC8vICAgICBGaWxlU2F2ZXIuc2F2ZUFzKGJsb2IsIFwiVGltZXNoZWV0IEFuYWx5c2lzLnhsc3hcIik7XG4gICAgLy8gfSk7XG5cbn1cblxuY29uc3QgaW5pdGlhbGl6ZUhvdXJzV29ya2VkTWFwID0gKGhvdXJzV29ya2VkTWFwLCBzaW1wbGlmaWVkU2NoZWR1bGUpID0+IHtcbiAgICBPYmplY3Qua2V5cyhzaW1wbGlmaWVkU2NoZWR1bGUpLmZvckVhY2goKHdlZWtOYW1lKSA9PiB7XG4gICAgICAgIGlmICghaG91cnNXb3JrZWRNYXBbd2Vla05hbWVdKSB7XG4gICAgICAgICAgICBob3Vyc1dvcmtlZE1hcFt3ZWVrTmFtZV0gPSB7XG4gICAgICAgICAgICAgICAgdG90YWw6IHtcbiAgICAgICAgICAgICAgICAgICAgdG90YWxIb3Vyc1dvcmtlZDogMCxcbiAgICAgICAgICAgICAgICAgICAgdG90YWxIb3Vyc1NjaGVkdWxlZDogMCxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGludGVybnM6IHtcblxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cblxuXG4gICAgICAgIE9iamVjdC5rZXlzKHNpbXBsaWZpZWRTY2hlZHVsZVt3ZWVrTmFtZV0uaW50ZXJucykuZm9yRWFjaCgoaW50ZXJuKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBkZWNpbWFsSG91cnNTY2hlZHVsZWQgPSBzaW1wbGlmaWVkU2NoZWR1bGVbd2Vla05hbWVdLmludGVybnNbaW50ZXJuXTtcbiAgICAgICAgICAgIGNvbnN0IG5vcm1hbEhvdXJzU2NoZWR1bGVkID0gZGVjaW1hbFRvSG91cnMoZGVjaW1hbEhvdXJzU2NoZWR1bGVkKTtcbiAgICAgICAgICAgIGlmKCFob3Vyc1dvcmtlZE1hcFt3ZWVrTmFtZV0uaW50ZXJuc1tpbnRlcm5dKXtcbiAgICAgICAgICAgICAgICBob3Vyc1dvcmtlZE1hcFt3ZWVrTmFtZV0uaW50ZXJuc1tpbnRlcm5dID0ge307XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGNvbnN0IGN1cnJJbnRlcm4gPSBob3Vyc1dvcmtlZE1hcFt3ZWVrTmFtZV0uaW50ZXJuc1tpbnRlcm5dO1xuICAgICAgICAgICAgY3VyckludGVybi5ub3JtYWxIb3Vyc1dvcmtlZCA9IFwiMDA6MDBcIjtcbiAgICAgICAgICAgIGN1cnJJbnRlcm4ubm9ybWFsSG91cnNTY2hlZHVsZWQgPSBub3JtYWxIb3Vyc1NjaGVkdWxlZDtcbiAgICAgICAgICAgIGN1cnJJbnRlcm4ucGVyY2VudGFnZURpZmZlcmVuY2UgPSAwO1xuICAgICAgICAgICAgY29uc29sZS5sb2coaG91cnNXb3JrZWRNYXBbd2Vla05hbWVdLmludGVybnNbaW50ZXJuXSk7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhob3Vyc1dvcmtlZE1hcFt3ZWVrTmFtZV0uaW50ZXJucyk7XG4gICAgICAgIH0pXG4gICAgICAgIGNvbnNvbGUubG9nKGhvdXJzV29ya2VkTWFwW3dlZWtOYW1lXS5pbnRlcm5zKTtcblxuICAgICAgICBob3Vyc1dvcmtlZE1hcFt3ZWVrTmFtZV0udG90YWwudG90YWxIb3Vyc1NjaGVkdWxlZCA9IHNpbXBsaWZpZWRTY2hlZHVsZVt3ZWVrTmFtZV0udG90YWxIb3Vyc1NjaGVkdWxlZDtcbiAgICB9KVxuICAgIGNvbnNvbGUubG9nKGhvdXJzV29ya2VkTWFwKTtcbn1cblxuY29uc3QgcG9wdWxhdGVIb3Vyc1dvcmtlZE1hcCA9ICh0aW1lc2hlZXRFeGNlbCwgaG91cnNXb3JrZWRNYXAsIHNpbXBsaWZpZWRTY2hlZHVsZSwgcGVyY2VudGFnZUFjY2VwdGVkKSA9PiB7XG4gICAgY29uc3QgdGltZVNoZWV0ID0gdGltZXNoZWV0RXhjZWwuZ2V0V29ya3NoZWV0KFwiQWxsIEVtcGxveWVlc1wiKTtcblxuICAgIGNvbnN0IHRlbXBGaXJzdE5hbWUgPSB0aW1lU2hlZXQuZ2V0Q2VsbCgyLCAxKS52YWx1ZTtcbiAgICBjb25zdCB0ZW1wTGFzdE5hbWUgPSB0aW1lU2hlZXQuZ2V0Q2VsbCgyLCAyKS52YWx1ZTtcbiAgICBsZXQgY3VycmVudEludGVybiA9IHRlbXBGaXJzdE5hbWUgKyBcIiBcIiArIHRlbXBMYXN0TmFtZTtcbiAgICBmb3IgKGxldCByb3cgPSAyOyByb3cgPD0gdGltZVNoZWV0LnJvd0NvdW50OyByb3crKykge1xuXG4gICAgICAgIGNvbnN0IGZpcnN0TmFtZSA9IHRpbWVTaGVldC5nZXRDZWxsKHJvdywgMSkudmFsdWU7XG4gICAgICAgIGNvbnN0IGxhc3ROYW1lID0gdGltZVNoZWV0LmdldENlbGwocm93LCAyKS52YWx1ZTtcbiAgICAgICAgaWYgKGZpcnN0TmFtZSAmJlxuICAgICAgICAgICAgKGZpcnN0TmFtZSArIFwiIFwiICsgbGFzdE5hbWUgIT0gY3VycmVudEludGVybikpIHtcbiAgICAgICAgICAgIGN1cnJlbnRJbnRlcm4gPSBmaXJzdE5hbWUgKyBcIiBcIiArIGxhc3ROYW1lO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGRhdGUgPSB0aW1lU2hlZXQuZ2V0Q2VsbChyb3csIDUpLnZhbHVlO1xuICAgICAgICBpZiAoZGF0ZSkge1xuICAgICAgICAgICAgY29uc3Qgd2Vla05hbWUgPSBnZXREYXRlRnJvbVN0cmluZyh0aW1lU2hlZXQuZ2V0Q2VsbChyb3csIDUpLnZhbHVlKTtcblxuICAgICAgICAgICAgaWYgKGhvdXJzV29ya2VkTWFwW3dlZWtOYW1lXSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGN1cnJlbnRXZWVrID0gaG91cnNXb3JrZWRNYXBbd2Vla05hbWVdLmludGVybnM7XG5cbiAgICAgICAgICAgICAgICBpZiAoY3VycmVudFdlZWtbY3VycmVudEludGVybl0pIHtcbiAgICAgICAgICAgICAgICAgICAgcHJvY2Vzc0hvdXJzRGF0YShyb3csIHRpbWVTaGVldCwgaG91cnNXb3JrZWRNYXAsIGN1cnJlbnRJbnRlcm4sIHdlZWtOYW1lLCBzaW1wbGlmaWVkU2NoZWR1bGUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAvLyBwb3B1bGF0ZVJvdyh3b3JrQm9va0RhdGEsIGN1cnJlbnRJbnRlcm5EYXRhLCBwZXJjZW50YWdlQWNjZXB0ZWQsIHJvdyk7XG4gICAgICAgIC8vIGN1cnJTaGVldC5nZXRDZWxsKDIsIDkpLnZhbHVlID0gaG91cnNXb3JrZWRNYXBbd2Vla05hbWVdLnRvdGFsO1xuICAgICAgICAvLyBjdXJyU2hlZXQuZ2V0Q2VsbCgyLCAxMCkudmFsdWUgPSBzaW1wbGlmaWVkU2NoZWR1bGVbd2Vla05hbWVdLnRvdGFsU2NoZWR1bGVkSG91cnM7XG4gICAgICAgIC8vIGN1cnJTaGVldC5nZXRDZWxsKDIsIDExKS52YWx1ZSA9IChob3Vyc1dvcmtlZE1hcFt3ZWVrTmFtZV0udG90YWwgLyBzaW1wbGlmaWVkU2NoZWR1bGVbd2Vla05hbWVdLnRvdGFsU2NoZWR1bGVkSG91cnMgKiAxMDApLnRvRml4ZWQoMik7XG4gICAgfVxuXG4gICAgY29uc29sZS5sb2coaG91cnNXb3JrZWRNYXApO1xuICAgIGNvbnNvbGUubG9nKHNpbXBsaWZpZWRTY2hlZHVsZSlcbn1cblxuY29uc3Qgc2V0VXBOZXdTaGVldCA9IChob3Vyc1dvcmtlZE1hcCwgd2Vla05hbWUsIHdvcmtib29rKSA9PiB7XG4gICAgaG91cnNXb3JrZWRNYXBbd2Vla05hbWVdID0ge307XG4gICAgaG91cnNXb3JrZWRNYXBbd2Vla05hbWVdLnRvdGFsID0gMDtcbiAgICBjb25zdCBzaGVldCA9IHdvcmtib29rLmFkZFdvcmtzaGVldCh3ZWVrTmFtZSk7XG4gICAgc2hlZXQudmlld3MgPSBbe31dO1xuICAgIHNoZWV0LnByb3BlcnRpZXMuZGVmYXVsdENvbFdpZHRoID0gMTU7XG4gICAgc2hlZXQucHJvcGVydGllcy5kZWZhdWx0Um93SGVpZ2h0ID0gMjA7XG4gICAgc2V0VXBDb2x1bW5zKHNoZWV0KTtcbn1cblxuY29uc3Qgc2V0VXBDb2x1bW5zID0gKHdvcmtzaGVldCkgPT4ge1xuICAgIGNvbnN0IGZpcnN0TmFtZSA9IHdvcmtzaGVldC5nZXRDb2x1bW4oMSk7XG4gICAgZmlyc3ROYW1lLmhlYWRlciA9IFwiRmlyc3QgTmFtZVwiO1xuICAgIGZpcnN0TmFtZS5rZXkgPSBcImZpcnN0TmFtZVwiO1xuXG4gICAgY29uc3QgbGFzdE5hbWUgPSB3b3Jrc2hlZXQuZ2V0Q29sdW1uKDIpO1xuICAgIGxhc3ROYW1lLmhlYWRlciA9IFwiTGFzdCBOYW1lXCI7XG4gICAgbGFzdE5hbWUua2V5ID0gXCJsYXN0TmFtZVwiO1xuXG4gICAgY29uc3QgaG91cnNXb3JrZWQgPSB3b3Jrc2hlZXQuZ2V0Q29sdW1uKDMpO1xuICAgIGhvdXJzV29ya2VkLmhlYWRlciA9IFwiSG91cnMgV29ya2VkXCI7XG4gICAgaG91cnNXb3JrZWQua2V5ID0gXCJob3Vyc1dvcmtlZFwiO1xuXG4gICAgY29uc3QgaG91cnNTY2hlZHVsZWQgPSB3b3Jrc2hlZXQuZ2V0Q29sdW1uKDQpO1xuICAgIGhvdXJzU2NoZWR1bGVkLmhlYWRlciA9IFwiSG91cnMgU2NoZWR1bGVkXCI7XG4gICAgaG91cnNTY2hlZHVsZWQua2V5ID0gXCJob3Vyc1NjaGVkdWxlZFwiO1xuXG5cbiAgICBjb25zdCBwZXJjZW50V29ya2VkID0gd29ya3NoZWV0LmdldENvbHVtbig1KTtcbiAgICBwZXJjZW50V29ya2VkLmhlYWRlciA9IFwiUGVyY2VudCBXb3JrZWRcIjtcbiAgICBwZXJjZW50V29ya2VkLmtleSA9IFwicGVyY2VudFdvcmtlZFwiO1xuXG4gICAgY29uc3QgY2hhbmdlRnJvbVByZXZpb3VzV2VlayA9IHdvcmtzaGVldC5nZXRDb2x1bW4oNik7XG4gICAgY2hhbmdlRnJvbVByZXZpb3VzV2Vlay5oZWFkZXIgPSBcIlBlcmNlbnQgQ2hhbmdlIGZyb20gTGFzdCBXZWVrXCI7XG4gICAgY2hhbmdlRnJvbVByZXZpb3VzV2Vlay5rZXkgPSBcImNoYW5nZUZyb21QcmV2aW91c1dlZWtcIjtcbiAgICBjaGFuZ2VGcm9tUHJldmlvdXNXZWVrLndpZHRoID0gMjU7XG5cbiAgICBjb25zdCB0YUFzc2lnbmVkID0gd29ya3NoZWV0LmdldENvbHVtbig3KTtcbiAgICB0YUFzc2lnbmVkLmhlYWRlciA9IFwiVEFcIjtcbiAgICB0YUFzc2lnbmVkLmtleSA9IFwidGFcIjtcblxuICAgIGNvbnN0IHRvdGFsV29ya2VkID0gd29ya3NoZWV0LmdldENvbHVtbig5KTtcbiAgICB0b3RhbFdvcmtlZC5oZWFkZXIgPSBcIlRvdGFsIFdvcmtlZFwiO1xuICAgIHRvdGFsV29ya2VkLmtleSA9IFwidG90YWxXb3JrZWRcIjtcblxuICAgIGNvbnN0IHRvdGFsU2NoZWR1bGVkID0gd29ya3NoZWV0LmdldENvbHVtbigxMCk7XG4gICAgdG90YWxTY2hlZHVsZWQuaGVhZGVyID0gXCJUb3RhbCBTY2hlZHVsZWRcIjtcbiAgICB0b3RhbFNjaGVkdWxlZC5rZXkgPSBcInRvdGFsU2NoZWR1bGVkXCI7XG5cbiAgICBjb25zdCB0b3RhbFBlcmNlbnRXb3JrZWQgPSB3b3Jrc2hlZXQuZ2V0Q29sdW1uKDExKTtcbiAgICB0b3RhbFBlcmNlbnRXb3JrZWQuaGVhZGVyID0gXCJQZXJjZW50IFdvcmtlZFwiO1xuICAgIHRvdGFsUGVyY2VudFdvcmtlZC5rZXkgPSBcInRvdGFsUGVyY2VudFdvcmtlZFwiO1xuXG4gICAgY29uc3QgdG90YWxQZXJjZW50Q2hhbmdlID0gd29ya3NoZWV0LmdldENvbHVtbigxMik7XG4gICAgdG90YWxQZXJjZW50Q2hhbmdlLmhlYWRlciA9IFwiVG90YWwgUGVyY2VudCBDaGFuZ2UgZnJvbSBMYXN0IFdlZWtcIjtcbiAgICB0b3RhbFBlcmNlbnRDaGFuZ2Uua2V5ID0gXCJ0b3RhbFBlcmNlbnRDaGFuZ2VcIjtcbiAgICB0b3RhbFBlcmNlbnRDaGFuZ2Uud2lkdGggPSAzMDtcblxuXG59XG5cbmNvbnN0IHBvcHVsYXRlUm93ID0gKHdvcmtCb29rRGF0YSwgY3VycmVudEludGVybkRhdGEsIHBlcmNlbnRhZ2VBY2NlcHRlZCwgcm93KSA9PiB7XG4gICAgY29uc3QgY3VyclNoZWV0ID0gd29ya0Jvb2tEYXRhLndvcmtib29rLmdldFdvcmtzaGVldCh3b3JrQm9va0RhdGEud2Vla05hbWUpO1xuXG4gICAgY3VyclNoZWV0LmFkZFJvdyh7XG4gICAgICAgIGZpcnN0TmFtZTogY3VycmVudEludGVybkRhdGEuZmlyc3ROYW1lLFxuICAgICAgICBsYXN0TmFtZTogY3VycmVudEludGVybkRhdGEubGFzdE5hbWUsXG4gICAgICAgIGhvdXJzV29ya2VkOiBub3JtYWxIb3Vyc1dvcmtlZCxcbiAgICAgICAgaG91cnNTY2hlZHVsZWQ6IG5vcm1hbEhvdXJzU2NoZWR1bGVkLFxuICAgICAgICBwZXJjZW50V29ya2VkOiBwZXJjZW50YWdlRGlmZmVyZW5jZSxcblxuICAgIH0pXG5cbiAgICBjb2xvclBlcmNlbnRhZ2VDZWxsKGN1cnJTaGVldCwgcGVyY2VudGFnZUFjY2VwdGVkKTtcblxufVxuXG5jb25zdCBwcm9jZXNzSG91cnNEYXRhID0gKHJvdywgdGltZVNoZWV0LCBob3Vyc1dvcmtlZE1hcCwgY3VycmVudEludGVybiwgd2Vla05hbWUsIHNpbXBsaWZpZWRTY2hlZHVsZSkgPT4ge1xuICAgIGNvbnN0IG5vcm1hbEhvdXJzV29ya2VkID0gdGltZVNoZWV0LmdldENlbGwocm93LCAxNSkudmFsdWU7XG4gICAgaG91cnNXb3JrZWRNYXBbd2Vla05hbWVdLmludGVybnNbY3VycmVudEludGVybl0ubm9ybWFsSG91cnNXb3JrZWQgPSBub3JtYWxIb3Vyc1dvcmtlZDtcblxuICAgIGNvbnN0IGRlY2ltYWxIb3Vyc1NjaGVkdWxlZCA9IHNpbXBsaWZpZWRTY2hlZHVsZVt3ZWVrTmFtZV1bY3VycmVudEludGVybl07XG4gICAgY29uc3QgZGVjaW1hbEhvdXJzV29ya2VkID0gaG91cnNUb0RlY2ltYWwobm9ybWFsSG91cnNXb3JrZWQpO1xuXG4gICAgaG91cnNXb3JrZWRNYXBbd2Vla05hbWVdLnRvdGFsLnRvdGFsSG91cnNXb3JrZWQgKz0gZGVjaW1hbEhvdXJzV29ya2VkO1xuICAgIGhvdXJzV29ya2VkTWFwLnRvdGFsLnRvdGFsSG91cnNXb3JrZWQgKz0gZGVjaW1hbEhvdXJzV29ya2VkO1xuICAgIGNvbnN0IHBlcmNlbnRhZ2VEaWZmZXJlbmNlID0gKGRlY2ltYWxIb3Vyc1dvcmtlZCAvIGRlY2ltYWxIb3Vyc1NjaGVkdWxlZCAqIDEwMCkudG9GaXhlZCgyKTtcbiAgICBob3Vyc1dvcmtlZE1hcFt3ZWVrTmFtZV0uaW50ZXJuc1tjdXJyZW50SW50ZXJuXS5wZXJjZW50YWdlRGlmZmVyZW5jZSA9IHBlcmNlbnRhZ2VEaWZmZXJlbmNlO1xufVxuXG5jb25zdCBwcm9jZXNzQ2hhbmdlRnJvbVByZXZpb3VzV2VlayA9ICh3b3JrYm9vaywgaG91cnNXb3JrZWRNYXApID0+IHtcblxuICAgIHdvcmtib29rLmVhY2hTaGVldCgod29ya3NoZWV0KSA9PiB7XG4gICAgICAgIGNvbnN0IGN1cnJXZWVrID0gd29ya3NoZWV0Lm5hbWU7XG4gICAgICAgIGNvbnN0IHByZXZXZWVrID0gZ2V0V2Vla0JlZm9yZShjdXJyV2Vlayk7XG4gICAgICAgIGZvciAobGV0IHJvdyA9IDI7IHJvdyA8PSB3b3Jrc2hlZXQucm93Q291bnQ7IHJvdysrKSB7XG4gICAgICAgICAgICBjb25zdCBmaXJzdE5hbWUgPSB3b3Jrc2hlZXQuZ2V0Q2VsbChyb3csIDEpLnZhbHVlO1xuICAgICAgICAgICAgY29uc3QgbGFzdE5hbWUgPSB3b3Jrc2hlZXQuZ2V0Q2VsbChyb3csIDIpLnZhbHVlO1xuICAgICAgICAgICAgY29uc3QgZnVsbE5hbWUgPSBmaXJzdE5hbWUgKyAnICcgKyBsYXN0TmFtZTtcbiAgICAgICAgICAgIGxldCBwZXJjZW50YWdlRGlmZmVyZW5jZU9mUHJldmlvdXNXZWVrO1xuICAgICAgICAgICAgaWYgKGhvdXJzV29ya2VkTWFwW3ByZXZXZWVrXSAmJiBob3Vyc1dvcmtlZE1hcFtwcmV2V2Vla11bZnVsbE5hbWVdKSB7XG4gICAgICAgICAgICAgICAgcGVyY2VudGFnZURpZmZlcmVuY2VPZlByZXZpb3VzV2VlayA9IGhvdXJzV29ya2VkTWFwW3ByZXZXZWVrXVtmdWxsTmFtZV0ucGVyY2VudGFnZURpZmZlcmVuY2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBwZXJjZW50YWdlRGlmZmVyZW5jZU9mQ3VycmVudFdlZWsgPSBob3Vyc1dvcmtlZE1hcFtjdXJyV2Vla11bZnVsbE5hbWVdLnBlcmNlbnRhZ2VEaWZmZXJlbmNlO1xuICAgICAgICAgICAgbGV0IGRpZmZlcmVuY2VGcm9tV2Vla3MgPSBwZXJjZW50YWdlRGlmZmVyZW5jZU9mUHJldmlvdXNXZWVrID9cbiAgICAgICAgICAgICAgICAocGVyY2VudGFnZURpZmZlcmVuY2VPZkN1cnJlbnRXZWVrIC0gcGVyY2VudGFnZURpZmZlcmVuY2VPZlByZXZpb3VzV2VlaykudG9GaXhlZCgyKSA6IFwiXCI7XG5cbiAgICAgICAgICAgIGNvbnN0IGN1cnJDZWxsID0gd29ya3NoZWV0LmdldENlbGwocm93LCA2KTtcbiAgICAgICAgICAgIGN1cnJDZWxsLnZhbHVlID0gZGlmZmVyZW5jZUZyb21XZWVrcztcblxuICAgICAgICAgICAgaWYgKGN1cnJDZWxsIDw9IC0xNSkge1xuICAgICAgICAgICAgICAgIGN1cnJDZWxsLmZpbGwgPSB7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6ICdwYXR0ZXJuJyxcbiAgICAgICAgICAgICAgICAgICAgcGF0dGVybjogJ3NvbGlkJyxcbiAgICAgICAgICAgICAgICAgICAgZmdDb2xvcjogeyBhcmdiOiAnODBlNzYwNjAnIH1cbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGN1cnJDZWxsID4gMTUpIHtcbiAgICAgICAgICAgICAgICBjdXJyQ2VsbC5maWxsID0ge1xuICAgICAgICAgICAgICAgICAgICB0eXBlOiAncGF0dGVybicsXG4gICAgICAgICAgICAgICAgICAgIHBhdHRlcm46ICdzb2xpZCcsXG4gICAgICAgICAgICAgICAgICAgIGZnQ29sb3I6IHsgYXJnYjogJzgwNDJmNThkJyB9XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICB9XG4gICAgfSlcblxufVxuXG5jb25zdCBjb2xvclBlcmNlbnRhZ2VDZWxsID0gKGN1cnJTaGVldCwgcGVyY2VudGFnZUFjY2VwdGVkKSA9PiB7XG4gICAgY29uc3QgY3VyckNlbGwgPSBjdXJyU2hlZXQuZ2V0Q2VsbChjdXJyU2hlZXQucm93Q291bnQsIDUpXG4gICAgaWYgKHBhcnNlRmxvYXQoY3VyckNlbGwpIDwgcGVyY2VudGFnZUFjY2VwdGVkKSB7XG4gICAgICAgIGN1cnJDZWxsLmZpbGwgPSB7XG4gICAgICAgICAgICB0eXBlOiAncGF0dGVybicsXG4gICAgICAgICAgICBwYXR0ZXJuOiAnc29saWQnLFxuICAgICAgICAgICAgZmdDb2xvcjogeyBhcmdiOiAnODBlNzYwNjAnIH1cbiAgICAgICAgfTtcbiAgICB9XG4gICAgaWYgKHBhcnNlRmxvYXQoY3VyckNlbGwpID4gMTAwKSB7XG4gICAgICAgIGN1cnJDZWxsLmZpbGwgPSB7XG4gICAgICAgICAgICB0eXBlOiAncGF0dGVybicsXG4gICAgICAgICAgICBwYXR0ZXJuOiAnc29saWQnLFxuICAgICAgICAgICAgZmdDb2xvcjogeyBhcmdiOiAnODA0MmY1OGQnIH1cbiAgICAgICAgfTtcbiAgICB9XG59XG5cblxuZXhwb3J0IGRlZmF1bHQgbWFrZVRpbWVzaGVldEFuYWx5c2lzOyJdLCJuYW1lcyI6WyJFeGNlbEpTIiwiRmlsZVNhdmVyIiwiaG91cnNUb0RlY2ltYWwiLCJnZXREYXRlRnJvbVN0cmluZyIsImRlY2ltYWxUb0hvdXJzIiwiZ2V0V2Vla0JlZm9yZSIsIm1ha2VUaW1lc2hlZXRBbmFseXNpcyIsInRpbWVzaGVldEV4Y2VsIiwic2ltcGxpZmllZFNjaGVkdWxlIiwicGVyY2VudGFnZUFjY2VwdGVkIiwid29ya2Jvb2siLCJXb3JrYm9vayIsImhvdXJzV29ya2VkTWFwIiwiaW5pdGlhbGl6ZUhvdXJzV29ya2VkTWFwIiwiY29uc29sZSIsImxvZyIsInBvcHVsYXRlSG91cnNXb3JrZWRNYXAiLCJwcm9jZXNzQ2hhbmdlRnJvbVByZXZpb3VzV2VlayIsIk9iamVjdCIsImtleXMiLCJmb3JFYWNoIiwid2Vla05hbWUiLCJ0b3RhbCIsInRvdGFsSG91cnNXb3JrZWQiLCJ0b3RhbEhvdXJzU2NoZWR1bGVkIiwiaW50ZXJucyIsImludGVybiIsImRlY2ltYWxIb3Vyc1NjaGVkdWxlZCIsIm5vcm1hbEhvdXJzU2NoZWR1bGVkIiwiY3VyckludGVybiIsIm5vcm1hbEhvdXJzV29ya2VkIiwicGVyY2VudGFnZURpZmZlcmVuY2UiLCJ0aW1lU2hlZXQiLCJnZXRXb3Jrc2hlZXQiLCJ0ZW1wRmlyc3ROYW1lIiwiZ2V0Q2VsbCIsInZhbHVlIiwidGVtcExhc3ROYW1lIiwiY3VycmVudEludGVybiIsInJvdyIsInJvd0NvdW50IiwiZmlyc3ROYW1lIiwibGFzdE5hbWUiLCJkYXRlIiwiY3VycmVudFdlZWsiLCJwcm9jZXNzSG91cnNEYXRhIiwic2V0VXBOZXdTaGVldCIsInNoZWV0IiwiYWRkV29ya3NoZWV0Iiwidmlld3MiLCJwcm9wZXJ0aWVzIiwiZGVmYXVsdENvbFdpZHRoIiwiZGVmYXVsdFJvd0hlaWdodCIsInNldFVwQ29sdW1ucyIsIndvcmtzaGVldCIsImdldENvbHVtbiIsImhlYWRlciIsImtleSIsImhvdXJzV29ya2VkIiwiaG91cnNTY2hlZHVsZWQiLCJwZXJjZW50V29ya2VkIiwiY2hhbmdlRnJvbVByZXZpb3VzV2VlayIsIndpZHRoIiwidGFBc3NpZ25lZCIsInRvdGFsV29ya2VkIiwidG90YWxTY2hlZHVsZWQiLCJ0b3RhbFBlcmNlbnRXb3JrZWQiLCJ0b3RhbFBlcmNlbnRDaGFuZ2UiLCJwb3B1bGF0ZVJvdyIsIndvcmtCb29rRGF0YSIsImN1cnJlbnRJbnRlcm5EYXRhIiwiY3VyclNoZWV0IiwiYWRkUm93IiwiY29sb3JQZXJjZW50YWdlQ2VsbCIsImRlY2ltYWxIb3Vyc1dvcmtlZCIsInRvRml4ZWQiLCJlYWNoU2hlZXQiLCJjdXJyV2VlayIsIm5hbWUiLCJwcmV2V2VlayIsImZ1bGxOYW1lIiwicGVyY2VudGFnZURpZmZlcmVuY2VPZlByZXZpb3VzV2VlayIsInBlcmNlbnRhZ2VEaWZmZXJlbmNlT2ZDdXJyZW50V2VlayIsImRpZmZlcmVuY2VGcm9tV2Vla3MiLCJjdXJyQ2VsbCIsImZpbGwiLCJ0eXBlIiwicGF0dGVybiIsImZnQ29sb3IiLCJhcmdiIiwicGFyc2VGbG9hdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/helpers/makeTimeSheetAnalysis.jsx\n"));

/***/ })

});