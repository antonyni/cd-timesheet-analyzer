"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/readable-web-to-node-stream";
exports.ids = ["vendor-chunks/readable-web-to-node-stream"];
exports.modules = {

/***/ "(ssr)/./node_modules/readable-web-to-node-stream/lib/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/readable-web-to-node-stream/lib/index.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ReadableWebToNodeStream = void 0;\nconst readable_stream_1 = __webpack_require__(/*! readable-stream */ \"(ssr)/./node_modules/readable-stream/readable.js\");\n/**\n * Converts a Web-API stream into Node stream.Readable class\n * Node stream readable: https://nodejs.org/api/stream.html#stream_readable_streams\n * Web API readable-stream: https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream\n * Node readable stream: https://nodejs.org/api/stream.html#stream_readable_streams\n */ class ReadableWebToNodeStream extends readable_stream_1.Readable {\n    /**\n     *\n     * @param stream Readable​Stream: https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream\n     */ constructor(stream){\n        super();\n        this.bytesRead = 0;\n        this.released = false;\n        this.reader = stream.getReader();\n    }\n    /**\n     * Implementation of readable._read(size).\n     * When readable._read() is called, if data is available from the resource,\n     * the implementation should begin pushing that data into the read queue\n     * https://nodejs.org/api/stream.html#stream_readable_read_size_1\n     */ async _read() {\n        // Should start pushing data into the queue\n        // Read data from the underlying Web-API-readable-stream\n        if (this.released) {\n            this.push(null); // Signal EOF\n            return;\n        }\n        this.pendingRead = this.reader.read();\n        const data = await this.pendingRead;\n        // clear the promise before pushing pushing new data to the queue and allow sequential calls to _read()\n        delete this.pendingRead;\n        if (data.done || this.released) {\n            this.push(null); // Signal EOF\n        } else {\n            this.bytesRead += data.value.length;\n            this.push(data.value); // Push new data to the queue\n        }\n    }\n    /**\n     * If there is no unresolved read call to Web-API Readable​Stream immediately returns;\n     * otherwise will wait until the read is resolved.\n     */ async waitForReadToComplete() {\n        if (this.pendingRead) {\n            await this.pendingRead;\n        }\n    }\n    /**\n     * Close wrapper\n     */ async close() {\n        await this.syncAndRelease();\n    }\n    async syncAndRelease() {\n        this.released = true;\n        await this.waitForReadToComplete();\n        await this.reader.releaseLock();\n    }\n}\nexports.ReadableWebToNodeStream = ReadableWebToNodeStream; //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtd2ViLXRvLW5vZGUtc3RyZWFtL2xpYi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsK0JBQStCLEdBQUcsS0FBSztBQUN2QyxNQUFNRyxvQkFBb0JDLG1CQUFPQSxDQUFDLHlFQUFpQjtBQUNuRDs7Ozs7Q0FLQyxHQUNELE1BQU1GLGdDQUFnQ0Msa0JBQWtCRSxRQUFRO0lBQzVEOzs7S0FHQyxHQUNEQyxZQUFZQyxNQUFNLENBQUU7UUFDaEIsS0FBSztRQUNMLElBQUksQ0FBQ0MsU0FBUyxHQUFHO1FBQ2pCLElBQUksQ0FBQ0MsUUFBUSxHQUFHO1FBQ2hCLElBQUksQ0FBQ0MsTUFBTSxHQUFHSCxPQUFPSSxTQUFTO0lBQ2xDO0lBQ0E7Ozs7O0tBS0MsR0FDRCxNQUFNQyxRQUFRO1FBQ1YsMkNBQTJDO1FBQzNDLHdEQUF3RDtRQUN4RCxJQUFJLElBQUksQ0FBQ0gsUUFBUSxFQUFFO1lBQ2YsSUFBSSxDQUFDSSxJQUFJLENBQUMsT0FBTyxhQUFhO1lBQzlCO1FBQ0o7UUFDQSxJQUFJLENBQUNDLFdBQVcsR0FBRyxJQUFJLENBQUNKLE1BQU0sQ0FBQ0ssSUFBSTtRQUNuQyxNQUFNQyxPQUFPLE1BQU0sSUFBSSxDQUFDRixXQUFXO1FBQ25DLHVHQUF1RztRQUN2RyxPQUFPLElBQUksQ0FBQ0EsV0FBVztRQUN2QixJQUFJRSxLQUFLQyxJQUFJLElBQUksSUFBSSxDQUFDUixRQUFRLEVBQUU7WUFDNUIsSUFBSSxDQUFDSSxJQUFJLENBQUMsT0FBTyxhQUFhO1FBQ2xDLE9BQ0s7WUFDRCxJQUFJLENBQUNMLFNBQVMsSUFBSVEsS0FBS2YsS0FBSyxDQUFDaUIsTUFBTTtZQUNuQyxJQUFJLENBQUNMLElBQUksQ0FBQ0csS0FBS2YsS0FBSyxHQUFHLDZCQUE2QjtRQUN4RDtJQUNKO0lBQ0E7OztLQUdDLEdBQ0QsTUFBTWtCLHdCQUF3QjtRQUMxQixJQUFJLElBQUksQ0FBQ0wsV0FBVyxFQUFFO1lBQ2xCLE1BQU0sSUFBSSxDQUFDQSxXQUFXO1FBQzFCO0lBQ0o7SUFDQTs7S0FFQyxHQUNELE1BQU1NLFFBQVE7UUFDVixNQUFNLElBQUksQ0FBQ0MsY0FBYztJQUM3QjtJQUNBLE1BQU1BLGlCQUFpQjtRQUNuQixJQUFJLENBQUNaLFFBQVEsR0FBRztRQUNoQixNQUFNLElBQUksQ0FBQ1UscUJBQXFCO1FBQ2hDLE1BQU0sSUFBSSxDQUFDVCxNQUFNLENBQUNZLFdBQVc7SUFDakM7QUFDSjtBQUNBdEIsK0JBQStCLEdBQUdFLHlCQUNsQyxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jZC10aW1lc2hlZXQtYW5hbHl6ZXIvLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtd2ViLXRvLW5vZGUtc3RyZWFtL2xpYi9pbmRleC5qcz80ZGQ1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5SZWFkYWJsZVdlYlRvTm9kZVN0cmVhbSA9IHZvaWQgMDtcbmNvbnN0IHJlYWRhYmxlX3N0cmVhbV8xID0gcmVxdWlyZShcInJlYWRhYmxlLXN0cmVhbVwiKTtcbi8qKlxuICogQ29udmVydHMgYSBXZWItQVBJIHN0cmVhbSBpbnRvIE5vZGUgc3RyZWFtLlJlYWRhYmxlIGNsYXNzXG4gKiBOb2RlIHN0cmVhbSByZWFkYWJsZTogaHR0cHM6Ly9ub2RlanMub3JnL2FwaS9zdHJlYW0uaHRtbCNzdHJlYW1fcmVhZGFibGVfc3RyZWFtc1xuICogV2ViIEFQSSByZWFkYWJsZS1zdHJlYW06IGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FQSS9SZWFkYWJsZVN0cmVhbVxuICogTm9kZSByZWFkYWJsZSBzdHJlYW06IGh0dHBzOi8vbm9kZWpzLm9yZy9hcGkvc3RyZWFtLmh0bWwjc3RyZWFtX3JlYWRhYmxlX3N0cmVhbXNcbiAqL1xuY2xhc3MgUmVhZGFibGVXZWJUb05vZGVTdHJlYW0gZXh0ZW5kcyByZWFkYWJsZV9zdHJlYW1fMS5SZWFkYWJsZSB7XG4gICAgLyoqXG4gICAgICpcbiAgICAgKiBAcGFyYW0gc3RyZWFtIFJlYWRhYmxl4oCLU3RyZWFtOiBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9BUEkvUmVhZGFibGVTdHJlYW1cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihzdHJlYW0pIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgdGhpcy5ieXRlc1JlYWQgPSAwO1xuICAgICAgICB0aGlzLnJlbGVhc2VkID0gZmFsc2U7XG4gICAgICAgIHRoaXMucmVhZGVyID0gc3RyZWFtLmdldFJlYWRlcigpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBJbXBsZW1lbnRhdGlvbiBvZiByZWFkYWJsZS5fcmVhZChzaXplKS5cbiAgICAgKiBXaGVuIHJlYWRhYmxlLl9yZWFkKCkgaXMgY2FsbGVkLCBpZiBkYXRhIGlzIGF2YWlsYWJsZSBmcm9tIHRoZSByZXNvdXJjZSxcbiAgICAgKiB0aGUgaW1wbGVtZW50YXRpb24gc2hvdWxkIGJlZ2luIHB1c2hpbmcgdGhhdCBkYXRhIGludG8gdGhlIHJlYWQgcXVldWVcbiAgICAgKiBodHRwczovL25vZGVqcy5vcmcvYXBpL3N0cmVhbS5odG1sI3N0cmVhbV9yZWFkYWJsZV9yZWFkX3NpemVfMVxuICAgICAqL1xuICAgIGFzeW5jIF9yZWFkKCkge1xuICAgICAgICAvLyBTaG91bGQgc3RhcnQgcHVzaGluZyBkYXRhIGludG8gdGhlIHF1ZXVlXG4gICAgICAgIC8vIFJlYWQgZGF0YSBmcm9tIHRoZSB1bmRlcmx5aW5nIFdlYi1BUEktcmVhZGFibGUtc3RyZWFtXG4gICAgICAgIGlmICh0aGlzLnJlbGVhc2VkKSB7XG4gICAgICAgICAgICB0aGlzLnB1c2gobnVsbCk7IC8vIFNpZ25hbCBFT0ZcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnBlbmRpbmdSZWFkID0gdGhpcy5yZWFkZXIucmVhZCgpO1xuICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgdGhpcy5wZW5kaW5nUmVhZDtcbiAgICAgICAgLy8gY2xlYXIgdGhlIHByb21pc2UgYmVmb3JlIHB1c2hpbmcgcHVzaGluZyBuZXcgZGF0YSB0byB0aGUgcXVldWUgYW5kIGFsbG93IHNlcXVlbnRpYWwgY2FsbHMgdG8gX3JlYWQoKVxuICAgICAgICBkZWxldGUgdGhpcy5wZW5kaW5nUmVhZDtcbiAgICAgICAgaWYgKGRhdGEuZG9uZSB8fCB0aGlzLnJlbGVhc2VkKSB7XG4gICAgICAgICAgICB0aGlzLnB1c2gobnVsbCk7IC8vIFNpZ25hbCBFT0ZcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuYnl0ZXNSZWFkICs9IGRhdGEudmFsdWUubGVuZ3RoO1xuICAgICAgICAgICAgdGhpcy5wdXNoKGRhdGEudmFsdWUpOyAvLyBQdXNoIG5ldyBkYXRhIHRvIHRoZSBxdWV1ZVxuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIElmIHRoZXJlIGlzIG5vIHVucmVzb2x2ZWQgcmVhZCBjYWxsIHRvIFdlYi1BUEkgUmVhZGFibGXigItTdHJlYW0gaW1tZWRpYXRlbHkgcmV0dXJucztcbiAgICAgKiBvdGhlcndpc2Ugd2lsbCB3YWl0IHVudGlsIHRoZSByZWFkIGlzIHJlc29sdmVkLlxuICAgICAqL1xuICAgIGFzeW5jIHdhaXRGb3JSZWFkVG9Db21wbGV0ZSgpIHtcbiAgICAgICAgaWYgKHRoaXMucGVuZGluZ1JlYWQpIHtcbiAgICAgICAgICAgIGF3YWl0IHRoaXMucGVuZGluZ1JlYWQ7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogQ2xvc2Ugd3JhcHBlclxuICAgICAqL1xuICAgIGFzeW5jIGNsb3NlKCkge1xuICAgICAgICBhd2FpdCB0aGlzLnN5bmNBbmRSZWxlYXNlKCk7XG4gICAgfVxuICAgIGFzeW5jIHN5bmNBbmRSZWxlYXNlKCkge1xuICAgICAgICB0aGlzLnJlbGVhc2VkID0gdHJ1ZTtcbiAgICAgICAgYXdhaXQgdGhpcy53YWl0Rm9yUmVhZFRvQ29tcGxldGUoKTtcbiAgICAgICAgYXdhaXQgdGhpcy5yZWFkZXIucmVsZWFzZUxvY2soKTtcbiAgICB9XG59XG5leHBvcnRzLlJlYWRhYmxlV2ViVG9Ob2RlU3RyZWFtID0gUmVhZGFibGVXZWJUb05vZGVTdHJlYW07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJSZWFkYWJsZVdlYlRvTm9kZVN0cmVhbSIsInJlYWRhYmxlX3N0cmVhbV8xIiwicmVxdWlyZSIsIlJlYWRhYmxlIiwiY29uc3RydWN0b3IiLCJzdHJlYW0iLCJieXRlc1JlYWQiLCJyZWxlYXNlZCIsInJlYWRlciIsImdldFJlYWRlciIsIl9yZWFkIiwicHVzaCIsInBlbmRpbmdSZWFkIiwicmVhZCIsImRhdGEiLCJkb25lIiwibGVuZ3RoIiwid2FpdEZvclJlYWRUb0NvbXBsZXRlIiwiY2xvc2UiLCJzeW5jQW5kUmVsZWFzZSIsInJlbGVhc2VMb2NrIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/readable-web-to-node-stream/lib/index.js\n");

/***/ })

};
;